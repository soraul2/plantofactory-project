plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.plantofactory'
version = '0.0.1-SNAPSHOT'
description = 'Backend API server for Plantofactory project'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	//.env 파일을 시스템 환경 변수에 등록하기 위한 라이브러리
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'
	//1. 데이터베이스를 효율적으로 저장하기 위한 jpa 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//2. 백엔드 서버에서 보안을 적용하기 위한 스프링 시큐리티 라이브러리 , 사용하기 쉬운 장점이 있음.
	implementation 'org.springframework.boot:spring-boot-starter-security'
	def jjwtVersion = '0.12.5' // <-- 버전 변수 사용 추천

    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
